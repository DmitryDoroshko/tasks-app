{"version":3,"sources":["components/Title.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Title","title","className","Button","text","bgColor","textColor","onButtonClick","onClick","style","backgroundColor","color","defaultProps","Header","clickCount","e","console","log","Task","task","onDeleteTask","onReminderChange","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","length","map","AddTask","onAdd","useState","setText","dayAndTime","setDayAndTime","setReminder","onSubmit","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","App","setTasks","newId","Date","now","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAMeA,EAND,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,oBAAIC,UAAU,eAAd,SAA8BD,KCA9BE,EAAS,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,cACzC,OACI,wBAAQC,QAASD,EAAeE,MAAO,CAACC,gBAAiBL,EAASM,MAAOL,GAAaJ,UAAU,MAAhG,SAAuGE,KAI7GD,EAAOS,aAAe,CACpBD,MAAO,QACPD,gBAAiB,QACjBN,KAAM,YAUOD,QCCAU,EAnBA,WAEX,IAAIC,EAAa,EAOjB,OACI,mCACI,yBAAQZ,UAAU,SAAlB,UACI,cAAC,EAAD,CAAOD,MAAM,aACb,cAAC,EAAD,CAAQM,cATE,SAACQ,GACnBC,QAAQC,IAAR,kBAAuBH,EAAvB,WACAA,KAO8CV,KAAK,WAAWC,QAAQ,QAAQC,UAAU,gB,OCLjFY,EATF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,iBAC/B,OACI,sBAAKnB,UAAWiB,EAAKG,SAAW,gBAAkB,OAAQC,cAAe,kBAAMF,EAAiBF,EAAKK,KAArG,UACI,+BAAKL,EAAKf,KAAV,IAAgB,cAAC,IAAD,CAASK,MAAO,CAACE,MAAO,MAAOc,OAAQ,WAAYjB,QAAS,kBAAMY,EAAaD,EAAKK,UACpG,4BAAIL,EAAKO,UCMNC,EAVD,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAOR,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,iBACjC,OACI,qBAAKnB,UAAU,QAAf,SACK0B,EAAMC,OAAS,EAAID,EAAME,KAAI,SAAAX,GAC1B,OAAO,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,aAAcA,EAAcC,iBAAkBA,GAAnEF,EAAKK,OACtB,yBCuCFO,MA5Cf,YAA2B,IAATC,EAAQ,EAARA,MACd,EAAsBC,mBAAS,IAA/B,mBAAK7B,EAAL,KAAW8B,EAAX,KACA,EAAkCD,mBAAS,IAA3C,mBAAKE,EAAL,KAAiBC,EAAjB,KACA,EAA8BH,oBAAS,GAAvC,mBAAKX,EAAL,KAAee,EAAf,KAoBA,OACI,uBAAMnC,UAAU,WAAWoC,SAnBd,SAACvB,GACdA,EAAEwB,iBAEGnC,EAIA+B,GAKLH,EAAM5B,EAAM+B,EAAYb,GAExBY,EAAQ,IACRE,EAAc,IACdC,GAAY,IARRG,MAAM,wBAJNA,MAAM,iBAeV,UACI,sBAAKtC,UAAU,yBAAf,UACA,uBAAOuC,QAAQ,YAAf,uBACA,uBAAOC,KAAK,OAAOlB,GAAG,YAAYtB,UAAU,YAAYyC,YAAY,qBAAqBC,MAAOxC,EAAMyC,SAAU,SAAC9B,GAAD,OAAOmB,EAAQnB,EAAE+B,OAAOF,aAExI,sBAAK1C,UAAU,yBAAf,UACA,uBAAOuC,QAAQ,gBAAf,0BACA,uBAAOC,KAAK,OAAOlB,GAAG,gBAAgBtB,UAAU,gBAAgByC,YAAY,wBAAwBC,MAAOT,EAAYU,SAAU,SAAC9B,GAAD,OAAOqB,EAAcrB,EAAE+B,OAAOF,aAE/J,sBAAK1C,UAAU,yBAAf,UACA,uBAAOuC,QAAQ,wBAAf,0BACA,uBAAOC,KAAK,WAAWlB,GAAG,wBAAwBtB,UAAU,wBAAwB6C,QAASzB,EAAUuB,SAAU,WAC7GR,GAAaf,SAGjB,uBAAOoB,KAAK,SAASxC,UAAU,gBAAgB0C,MAAM,kBCIlDI,MAxCf,WACE,MAAwBf,mBACtB,CACE,CAACT,GAAI,EAAGpB,KAAM,sBAAuBsB,IAAK,qBAAsBJ,UAAU,GAC1E,CAACE,GAAI,EAAGpB,KAAM,WAAYsB,IAAK,qBAAsBJ,UAAU,GAC/D,CAACE,GAAI,EAAGpB,KAAM,eAAgBsB,IAAK,qBAAsBJ,UAAU,KAJvE,mBAAKM,EAAL,KAAYqB,EAAZ,KA0BA,OACE,sBAAK/C,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAS8B,MARC,SAAC5B,EAAM+B,EAAYb,GACjC,IAAI4B,EAAQC,KAAKC,MACjBH,EAAS,GAAD,mBAAKrB,GAAL,CAAY,CAACJ,GAAI0B,EAAO5B,SAAUA,EAAUlB,KAAMA,EAAMsB,IAAKS,SAOjE,cAAC,EAAD,CACAP,MAAOA,EACPR,aAxBa,SAACI,GAClByB,EAASrB,EAAMyB,QAAO,SAAAlC,GAAI,OAAIA,EAAKK,KAAOA,OAwBtCH,iBArBqB,SAACG,GAC1ByB,EAASrB,EAAME,KAAI,SAAAX,GAIjB,OAHIA,EAAKK,KAAOA,IACdL,EAAKG,UAAYH,EAAKG,UAEjBH,aCjBbmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.531e8cc6.chunk.js","sourcesContent":["const Title = ({title}) => {\r\n  return (\r\n      <h1 className=\"header-title\">{title}</h1>\r\n  )\r\n}\r\n\r\nexport default Title;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({text, bgColor, textColor, onButtonClick}) => {\r\n  return (\r\n      <button onClick={onButtonClick} style={{backgroundColor: bgColor, color: textColor }} className=\"btn\">{text}</button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'white',\r\n  backgroundColor: 'black',\r\n  text: 'Click Me',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string.isRequired,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import Title from \"./Title\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = () => {\r\n\r\n    let clickCount = 1;\r\n\r\n    const onButtonClick = (e) => {\r\n        console.log(`Clicked ${clickCount} times`);\r\n        clickCount++;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <Title title=\"Todo App\"/>\r\n                <Button onButtonClick={onButtonClick} text=\"Add Todo\" bgColor=\"green\" textColor=\"white\"/>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import {FaTimes} from \"react-icons/fa\";\r\n\r\nconst Task = ({task, onDeleteTask, onReminderChange}) => {\r\n    return (\r\n        <div className={task.reminder ? \"task reminder\" : \"task\"} onDoubleClick={() => onReminderChange(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDeleteTask(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDeleteTask, onReminderChange}) => {\r\n    return (\r\n        <div className=\"tasks\">\r\n            {tasks.length > 0 ? tasks.map(task => {\r\n                return <Task key={task.id} task={task} onDeleteTask={onDeleteTask} onReminderChange={onReminderChange}/>\r\n            }) : 'No tasks to show...'}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import {useState} from \"react\";\r\n\r\nfunction AddTask({onAdd}) {\r\n    let [text, setText] = useState('');\r\n    let [dayAndTime, setDayAndTime] = useState('');\r\n    let [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text) {\r\n            alert(\"Text invalid\");\r\n            return;\r\n        }\r\n        if (!dayAndTime) {\r\n            alert('Day And Time invalid');\r\n            return;\r\n        }\r\n\r\n        onAdd(text, dayAndTime, reminder);\r\n\r\n        setText('');\r\n        setDayAndTime('');\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <form className=\"add-task\" onSubmit={onSubmit}>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-name\">Task Name</label>\r\n            <input type=\"text\" id=\"task-name\" className=\"task-name\" placeholder=\"Enter task name...\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-day-time\">Day And Time</label>\r\n            <input type=\"text\" id=\"task-day-time\" className=\"task-day-time\" placeholder=\"Enter day and time...\" value={dayAndTime} onChange={(e) => setDayAndTime(e.target.value)}/>\r\n            </div>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-reminder-checked\">Set Reminder</label>\r\n            <input type=\"checkbox\" id=\"task-reminder-checked\" className=\"task-reminder-checked\" checked={reminder} onChange={() => {\r\n                setReminder(!reminder)}\r\n                }/>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from 'react';\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  let [tasks, setTasks] = useState(\n    [\n      {id: 1, text: \"Doctors Appointment\", day: \"Feb 5th at 2:30 pm\", reminder: true},\n      {id: 2, text: \"Work out\", day: \"Feb 6th at 2:30 pm\", reminder: false},\n      {id: 3, text: \"Go to school\", day: \"Feb 7th at 2:30 pm\", reminder: true},\n    ] \n  );\n  \n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  const changeTaskReminder = (id) => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        task.reminder = !task.reminder;\n      }\n      return task;\n    }));\n  } \n\n  const addTask = (text, dayAndTime, reminder) => {\n    let newId = Date.now();\n    setTasks([...tasks, {id: newId, reminder: reminder, text: text, day: dayAndTime}]);\n  }\n\n  return (\n    <div className=\"container\">\n        <Header/>\n        <AddTask onAdd={addTask}/>\n        <Tasks \n        tasks={tasks} \n        onDeleteTask={deleteTask} \n        onReminderChange={changeTaskReminder}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}