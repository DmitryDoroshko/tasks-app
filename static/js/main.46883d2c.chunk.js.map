{"version":3,"sources":["components/Title.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Title","title","className","Button","text","bgColor","textColor","onButtonClick","onClick","style","backgroundColor","color","defaultProps","Header","onShowAddTask","showTask","Task","task","onDeleteTask","onReminderChange","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","length","map","AddTask","onAdd","useState","setText","dayAndTime","setDayAndTime","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","App","setTasks","setShowTask","fetchTasks","a","fetch","result","json","data","fetchTask","deleteTask","method","filter","changeTaskReminder","taskToToggle","updatedTask","headers","body","JSON","stringify","res","addTask","newTask","useEffect","tasksFromServer","getTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46883d2c.chunk.js","sourcesContent":["const Title = ({title}) => {\r\n  return (\r\n      <h1 className=\"header-title\">{title}</h1>\r\n  )\r\n}\r\n\r\nexport default Title;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({text, bgColor, textColor, onButtonClick}) => {\r\n  return (\r\n      <button onClick={onButtonClick} style={{backgroundColor: bgColor, color: textColor }} className=\"btn\">{text}</button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'white',\r\n  backgroundColor: 'black',\r\n  text: 'Click Me',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string.isRequired,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import Title from \"./Title\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({onShowAddTask, showTask}) => {\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <Title title=\"Todo App\"/>\r\n                {showTask ? <Button onButtonClick={onShowAddTask} text=\"Close\" bgColor=\"red\" textColor=\"white\"/> \r\n                : <Button onButtonClick={onShowAddTask} text=\"Add Todo\" bgColor=\"green\" textColor=\"white\"/> \r\n                }\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import {FaTimes} from \"react-icons/fa\";\r\n\r\nconst Task = ({task, onDeleteTask, onReminderChange}) => {\r\n    return (\r\n        <div className={task.reminder ? \"task reminder\" : \"task\"} onDoubleClick={() => onReminderChange(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDeleteTask(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDeleteTask, onReminderChange}) => {\r\n    return (\r\n        <div className=\"tasks\">\r\n            {tasks.length > 0 ? tasks.map(task => {\r\n                return <Task key={task.id} task={task} onDeleteTask={onDeleteTask} onReminderChange={onReminderChange}/>\r\n            }) : 'No tasks to show...'}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import {useState} from \"react\";\r\n\r\nfunction AddTask({onAdd}) {\r\n    let [text, setText] = useState('');\r\n    let [dayAndTime, setDayAndTime] = useState('');\r\n    let [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text) {\r\n            alert(\"Text invalid\");\r\n            return;\r\n        }\r\n        if (!dayAndTime) {\r\n            alert('Day And Time invalid');\r\n            return;\r\n        }\r\n\r\n        onAdd(text, dayAndTime, reminder);\r\n\r\n        setText('');\r\n        setDayAndTime('');\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <form className=\"add-task\" onSubmit={onSubmit}>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-name\">Task Name</label>\r\n            <input type=\"text\" id=\"task-name\" className=\"task-name\" placeholder=\"Enter task name...\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-day-time\">Day And Time</label>\r\n            <input type=\"text\" id=\"task-day-time\" className=\"task-day-time\" placeholder=\"Enter day and time...\" value={dayAndTime} onChange={(e) => setDayAndTime(e.target.value)}/>\r\n            </div>\r\n            <div className=\"add-task__form-control\">\r\n            <label htmlFor=\"task-reminder-checked\">Set Reminder</label>\r\n            <input type=\"checkbox\" id=\"task-reminder-checked\" className=\"task-reminder-checked\" checked={reminder} onChange={() => {\r\n                setReminder(!reminder)}\r\n                }/>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import { useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  let [tasks, setTasks] = useState([]);\n  let [showTask, setShowTask] = useState(false);\n\n  const fetchTasks = async () => {\n    const result = await fetch(\"http://localhost:5000/tasks\");\n    const data = await result.json();\n\n    return data;\n  }\n\n  const fetchTask = async (id) => {\n    const result = await fetch(\"http://localhost:5000/tasks/\" + id);\n    const data = await result.json();\n    return data;\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(\"http://localhost:5000/tasks/\" + id, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  const changeTaskReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder};\n\n    const res = await fetch(\"http://localhost:5000/tasks/\" + id, {\n      method: \"PUT\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n\n    const data = await res.json();\n\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        task.reminder = data.reminder;\n      }\n      return task;\n    }));\n  } \n\n  const addTask = async (text, dayAndTime, reminder) => {\n    const task = {reminder: reminder, text: text, day: dayAndTime};\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n\n    const newTask = await res.json();\n\n    setTasks([...tasks, newTask]);\n  }\n\n  const onShowAddTask = () => {\n    setShowTask(!showTask);\n  }\n\n  useEffect(function () {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n\n    getTasks();\n  }, []);\n\n  return (\n    <div className=\"container\">\n        <Header onShowAddTask={onShowAddTask} showTask={showTask}/>\n        {showTask && <AddTask onAdd={addTask}/>}\n        <Tasks \n        tasks={tasks} \n        onDeleteTask={deleteTask} \n        onReminderChange={changeTaskReminder}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}